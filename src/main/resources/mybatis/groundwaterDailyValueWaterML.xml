<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="groundwaterDailyValueWaterML">

    <select id="getPoints" parameterType="map" resultMap="groundwaterML.pointResult" fetchSize="500">
      with best as (
        select monitoring_location_identifier, time_series_unique_id best_ts_id
           from (select *, RANK() OVER (ORDER BY ranking DESC) AS rk
           from nwis.best_time_series
           where monitoring_location_identifier = #{featureId,jdbcType=VARCHAR}
           and ranking > 0) as t
         where rk = 1)
      SELECT
        gw_daily_value.monitoring_location_identifier "monLocIdentifier",
        #{serverUrl,jdbcType=VARCHAR} || 'collections/' || #{collectionId,jdbcType=VARCHAR}
          || '/items/' || ml.monitoring_location_identifier || '?f=json' as "monLocReference",
        site_name "siteName",
        first_value(time_step) OVER wnd as "phenomenonTimeStart",
        last_value(time_step) OVER wnd as "phenomenonTimeEnd",
        time_series_unique_id "measurementTimeseriesId",
        observered_property_id "pcode",
        observered_property_name "pcodeDesc",
        observered_property_reference "pcodeReference",
        statistic "statisticDesc",
        statistic_reference "statisticReference",
        unit_of_measure "resultUnit",
        unit_of_measure_reference "resultUnitReference",
        time_step "resultDate",
        result "resultValue",
        qualifiers "qualifiersAsJson",
        approvals "approvalsAsJson"
      FROM nwis.groundwater_daily_value gw_daily_value
      join nwis.monitoring_location ml
        on gw_daily_value.monitoring_location_identifier = ml.monitoring_location_identifier
      left join best
        on gw_daily_value.monitoring_location_identifier = best.monitoring_location_identifier
     WHERE gw_daily_value.monitoring_location_identifier = #{featureId,jdbcType=VARCHAR} and
       ('any' = #{timeSeriesId,jdbcType=VARCHAR} or time_series_unique_id = #{timeSeriesId,jdbcType=VARCHAR})
         and ('any' = #{bestTS,jdbcType=VARCHAR} or
         (best.monitoring_location_identifier is not null
         and ( ('true' = #{bestTS,jdbcType=VARCHAR} and best.best_ts_id = time_series_unique_id)
         or
             ('false' = #{bestTS,jdbcType=VARCHAR} and best.best_ts_id != time_series_unique_id)
         )))
         and (
           approvals ?? 'Approved'
           OR CURRENT_DATE - time_step between -1 and 1095
         )
      WINDOW wnd AS (
        PARTITION BY ml.monitoring_location_identifier, observered_property_name, statistic
        ORDER BY ml.monitoring_location_identifier, observered_property_name, statistic, time_step
        ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
      )
    </select>

</mapper>
